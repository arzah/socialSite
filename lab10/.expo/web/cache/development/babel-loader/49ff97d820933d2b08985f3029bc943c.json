{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { ListItem, Button } from 'react-native-elements';\nimport Userpost from \"./Userpost\";\nexport default function Library() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var toggleModalVisibility = function toggleModalVisibility() {\n    setModalVisible(!isModalVisible);\n  };\n\n  return React.createElement(View, null, React.createElement(Button, {\n    title: \"Add Books\",\n    onPress: toggleModalVisibility\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: isModalVisible,\n    presentationStyle: \"overFullScreen\",\n    onDismiss: toggleModalVisibility\n  }, React.createElement(View, {\n    style: styles.viewWrapper\n  }, React.createElement(View, {\n    style: styles.modalView\n  }, React.createElement(TextInput, null, \"placeholder=\\\"Book Title\\\" value=\", bookTitle, \"onChangeText=\", function (value) {\n    return setBookTitle(value);\n  }), React.createElement(Button, {\n    title: \"Add\",\n    onPress: toggleModalVisibility\n  })))), React.createElement(FlatList, {\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, null, React.createElement(Item, {\n        text: item.text,\n        remove: remove,\n        id: item.id\n      }));\n    }\n  }), React.createElement(Text, {\n    style: styles.fixText\n  }, \"ToDo List:\"), React.createElement(TextInput, {\n    style: styles.makeLarger,\n    onChangeText: setText\n  }), React.createElement(Button, {\n    type: \"outline\",\n    title: \"Submit\",\n    onPress: function onPress() {\n      setPosts(posts.concat({\n        id: count,\n        text: text\n      }));\n      setCount(count + 1);\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  viewWrapper: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  modalView: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    elevation: 5,\n    transform: [{\n      translateX: -(width * 0.4)\n    }, {\n      translateY: -90\n    }],\n    height: 180,\n    width: width * 0.8,\n    backgroundColor: \"#fff\",\n    borderRadius: 7\n  }\n});","map":{"version":3,"sources":["/Users/arzahlaing/Documents/GitHub/react-navigation-labs-arzah/lab10/Library.jsx"],"names":["React","useState","ListItem","Button","Userpost","Library","isModalVisible","setModalVisible","toggleModalVisibility","styles","viewWrapper","modalView","bookTitle","value","setBookTitle","posts","item","text","remove","id","fixText","makeLarger","setText","setPosts","concat","count","setCount","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","position","top","left","elevation","transform","translateX","width","translateY","height","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;AAEA,SAASC,QAAT,EAAmBC,MAAnB,QAAgC,uBAAhC;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,OAAT,GAAmB;AAC9B,kBAA0CJ,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOK,cAAP;AAAA,MAAuBC,eAAvB;;AAEA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAChCD,IAAAA,eAAe,CAAC,CAACD,cAAF,CAAf;AACH,GAFD;;AAGA,SACI,oBAAC,IAAD,QACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAEE;AAAnC,IADJ,EAGI,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAC,OAArB;AACI,IAAA,WAAW,MADf;AACgB,IAAA,OAAO,EAAEF,cADzB;AAEI,IAAA,iBAAiB,EAAC,gBAFtB;AAGI,IAAA,SAAS,EAAEE;AAHf,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIC,MAAM,CAACC;AAAtB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACI,oBAAC,SAAD,6CAEWC,SAFX,mBAGkB,UAACC,KAAD;AAAA,WAAWC,YAAY,CAACD,KAAD,CAAvB;AAAA,GAHlB,CADJ,EAMI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,OAAO,EAAEL;AAA7B,IANJ,CADJ,CAJJ,CAHJ,EAmBO,oBAAC,QAAD;AACC,IAAA,IAAI,EAAEO,KADP;AAEC,IAAA,UAAU,EACN,0BAAW;AAAA,UAATC,IAAS,QAATA,IAAS;AACP,aACI,oBAAC,IAAD,QACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAI,CAACC,IAAjB;AAAuB,QAAA,MAAM,EAAEC,MAA/B;AAAuC,QAAA,EAAE,EAAEF,IAAI,CAACG;AAAhD,QADJ,CADJ;AAKH;AATN,IAnBP,EA+BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW;AAApB,kBA/BJ,EAgCI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEX,MAAM,CAACY,UAAzB;AAAqC,IAAA,YAAY,EAAEC;AAAnD,IAhCJ,EAiCI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAC,QAA7B;AAAsC,IAAA,OAAO,EAAE,mBAAM;AACjDC,MAAAA,QAAQ,CAACR,KAAK,CAACS,MAAN,CAAa;AAClBL,QAAAA,EAAE,EAAEM,KADc;AAElBR,QAAAA,IAAI,EAAEA;AAFY,OAAb,CAAD,CAAR;AAIAS,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;AAND,IAjCJ,CADJ;AA2CH;AAED,IAAMhB,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC7BlB,EAAAA,WAAW,EAAE;AACTmB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,eAAe,EAAE;AAJR,GADgB;AAQ1BrB,EAAAA,SAAS,EAAE;AACVmB,IAAAA,UAAU,EAAE,QADF;AAEVC,IAAAA,cAAc,EAAE,QAFN;AAGVE,IAAAA,QAAQ,EAAE,UAHA;AAIVC,IAAAA,GAAG,EAAE,KAJK;AAKVC,IAAAA,IAAI,EAAE,KALI;AAMVC,IAAAA,SAAS,EAAE,CAND;AAOVC,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,UAAU,EAAE,EAAEC,KAAK,GAAG,GAAV;AAAd,KAAD,EACC;AAAEC,MAAAA,UAAU,EAAE,CAAC;AAAf,KADD,CAPD;AASVC,IAAAA,MAAM,EAAE,GATE;AAUVF,IAAAA,KAAK,EAAEA,KAAK,GAAG,GAVL;AAWVP,IAAAA,eAAe,EAAE,MAXP;AAYVU,IAAAA,YAAY,EAAE;AAZJ;AARe,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport { Text, View, StyleSheet, TextInput, FlatList, Modal } from 'react-native';\nimport { ListItem, Button} from 'react-native-elements';\nimport Userpost from './Userpost';\n\nexport default function Library() {\n    const [isModalVisible, setModalVisible] = useState(false);\n    //const [bookTitle, setBookTitle] = useState(\"\");\n    const toggleModalVisibility = () => {\n        setModalVisible(!isModalVisible);\n    }\n    return (\n        <View>\n            <Button title=\"Add Books\" onPress={toggleModalVisibility} />\n\n            <Modal animationType=\"slide\"\n                transparent visible={isModalVisible}\n                presentationStyle=\"overFullScreen\"\n                onDismiss={toggleModalVisibility} >\n                <View style = {styles.viewWrapper}>\n                    <View style={styles.modalView}>\n                        <TextInput>\n                            placeholder=\"Book Title\"\n                            value={bookTitle}\n                            onChangeText={(value) => setBookTitle(value)}\n                        </TextInput>\n                        <Button title=\"Add\" onPress={toggleModalVisibility} />\n                    </View>\n                    </View>\n            </Modal>\n            \n               <FlatList\n                data={posts}\n                renderItem={\n                    ({item})=> {\n                        return (\n                            <View >\n                                <Item text={item.text} remove={remove} id={item.id}/>\n                            </View>\n                        )\n                    }\n                }\n            />\n            <Text style={styles.fixText}>ToDo List:</Text>\n            <TextInput style={styles.makeLarger} onChangeText={setText} />\n            <Button type=\"outline\" title=\"Submit\" onPress={() => {\n                setPosts(posts.concat({\n                    id: count,\n                    text: text\n                }));\n                setCount(count + 1);\n            }} />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    viewWrapper: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#fff\",\n    },\n\n       modalView: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        elevation: 5,\n        transform: [{ translateX: -(width * 0.4) }, \n                    { translateY: -90 }],\n        height: 180,\n        width: width * 0.8,\n        backgroundColor: \"#fff\",\n        borderRadius: 7,\n    },\n\n})"]},"metadata":{},"sourceType":"module"}