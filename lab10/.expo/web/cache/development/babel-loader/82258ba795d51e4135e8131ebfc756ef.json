{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { ListItem, Button } from 'react-native-elements';\nimport Userpost from \"./Userpost\";\nexport default function Library() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bookTitle = _useState4[0],\n      setBookTitle = _useState4[1];\n\n  var toggleModalVisibility = function toggleModalVisibility() {\n    setModalVisible(!isModalVisible);\n  };\n\n  return React.createElement(View, null, React.createElement(Button, {\n    title: \"Add Books\",\n    onPress: toggleModalVisibility\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: isModalVisible,\n    presentationStyle: \"overFullScreen\",\n    onDismiss: toggleModalVisibility\n  }, React.createElement(View, null, React.createElement(TextInput, {\n    placeholder: \"Book Title\",\n    value: bookTitle,\n    onChangeText: function onChangeText(value) {\n      return setBookTitle(value);\n    }\n  }), React.createElement(Button, {\n    title: \"Submit\",\n    onPress: toggleModalVisibility\n  }))));\n}","map":{"version":3,"sources":["/Users/arzahlaing/Documents/GitHub/react-navigation-labs-arzah/lab10/Library.jsx"],"names":["React","useState","ListItem","Button","Userpost","Library","isModalVisible","setModalVisible","bookTitle","setBookTitle","toggleModalVisibility","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAEA,SAASC,QAAT,EAAmBC,MAAnB,QAAgC,uBAAhC;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,OAAT,GAAmB;AAC9B,kBAA0CJ,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOK,cAAP;AAAA,MAAuBC,eAAvB;;AACA,mBAAkCN,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAChCH,IAAAA,eAAe,CAAC,CAACD,cAAF,CAAf;AACH,GAFD;;AAIA,SACI,oBAAC,IAAD,QACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAEI;AAAnC,IADJ,EAEI,oBAAC,KAAD;AACI,IAAA,aAAa,EAAC,OADlB;AAEI,IAAA,WAAW,MAFf;AAEgB,IAAA,OAAO,EAAEJ,cAFzB;AAGI,IAAA,iBAAiB,EAAC,gBAHtB;AAII,IAAA,SAAS,EAAEI;AAJf,KAKQ,oBAAC,IAAD,QACI,oBAAC,SAAD;AACQ,IAAA,WAAW,EAAC,YADpB;AAEQ,IAAA,KAAK,EAAEF,SAFf;AAGQ,IAAA,YAAY,EAAE,sBAACG,KAAD;AAAA,aAAWF,YAAY,CAACE,KAAD,CAAvB;AAAA;AAHtB,IADJ,EAKQ,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAED;AAAhC,IALR,CALR,CAFJ,CADJ;AAkBH","sourcesContent":["import React, {useState} from 'react';\nimport { Text, View, TextInput, FlatList, Modal } from 'react-native';\nimport { ListItem, Button} from 'react-native-elements';\nimport Userpost from './Userpost';\n\nexport default function Library() {\n    const [isModalVisible, setModalVisible] = useState(false);\n    const [bookTitle, setBookTitle] = useState(\"\");\n    const toggleModalVisibility = () => {\n        setModalVisible(!isModalVisible);\n    };\n\n    return (\n        <View>\n            <Button title=\"Add Books\" onPress={toggleModalVisibility} />\n            <Modal\n                animationType=\"slide\"\n                transparent visible={isModalVisible}\n                presentationStyle=\"overFullScreen\"\n                onDismiss={toggleModalVisibility} >\n                    <View>\n                        <TextInput\n                                placeholder=\"Book Title\"\n                                value={bookTitle}\n                                onChangeText={(value) => setBookTitle(value)} />\n                            <Button title=\"Submit\" onPress={toggleModalVisibility} />\n                    </View>\n            </Modal>\n            </View>\n    );\n}\n\n                \n"]},"metadata":{},"sourceType":"module"}